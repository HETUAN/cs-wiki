(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{784:function(s,a,t){"use strict";t.r(a);var e=t(29),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"你的-sql-还在回表查询吗-快给它安排覆盖索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#你的-sql-还在回表查询吗-快给它安排覆盖索引"}},[s._v("#")]),s._v(" 你的 SQL 还在回表查询吗？快给它安排覆盖索引")]),s._v(" "),t("h3",{attrs:{id:"什么是回表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是回表查询"}},[s._v("#")]),s._v(" 什么是回表查询")]),s._v(" "),t("p",[s._v("小伙伴们可以先看这篇文章了解下什么是聚集索引和辅助索引："),t("a",{attrs:{href:"https://mp.weixin.qq.com/s/ofGWt_kAajIB0EpI67pbZg",target:"_blank",rel:"noopener noreferrer"}},[s._v("Are You OK？主键、聚集索引、辅助索引"),t("OutboundLink")],1),s._v("，简单回顾下，聚集索引的叶子节点包含完整的行数据，而非聚集索引的叶子节点存储的是每行数据的辅助索引键 + 该行数据对应的聚集索引键（主键值）。")]),s._v(" "),t("p",[s._v("假设有张 user 表，包含 id（主键），name，age（普通索引）三列，有如下数据：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("id\tname\t    age\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\tJack\t    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\tAlice\t    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\tBob\t    \t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("38")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\tCarry\t    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("48")]),s._v("\n")])])]),t("p",[s._v("画一个比较简单比较容易懂的图来看下聚集索引和辅助索引：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("聚集索引：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210830100105.png",alt:""}})])]),s._v(" "),t("li",[t("p",[s._v("辅助索引（age）：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210830095343.png",alt:""}})])])]),s._v(" "),t("p",[s._v("如果查询条件为主键，则只需扫描一次聚集索引的 B+ 树即可定位到要查找的行记录。举个例子：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("查找过程如图中绿色所示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210830095538.png",alt:""}})]),s._v(" "),t("p",[s._v("如果查询条件为普通索引（辅助索引） age，则需要先查一遍辅助索引 B+ 树，根据辅助索引键得到对应的聚集索引键，然后再去聚集索引 B+ 树中查找到对应的行记录。举个例子：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("上述 "),t("code",[s._v("select *")]),s._v(" 等同于 "),t("code",[s._v("select id, age, name")]),s._v(" 对吧，id 是主键索引，age 是普通索引，而 name 并不存在于 age 索引的 B+ 树上，所以通过 age 索引查询到 id 和 age 的值之后，还需要去聚集索引上才能查到 name 的值。")]),s._v(" "),t("p",[s._v("如图所示，第一步，查 age 辅助索引：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210830095824.png",alt:""}})]),s._v(" "),t("p",[s._v("第二步，查聚集索引：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210830100105.png",alt:""}})]),s._v(" "),t("p",[s._v("这就是所谓的"),t("strong",[s._v("回表查询")]),s._v("，因为需要"),t("strong",[s._v("扫描两次索引 B+ 树")]),s._v("，所以很显然它的性能较扫一遍索引树更低。")]),s._v(" "),t("h3",{attrs:{id:"什么是覆盖索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是覆盖索引"}},[s._v("#")]),s._v(" 什么是覆盖索引")]),s._v(" "),t("p",[s._v("覆盖索引的目的就是避免发生回表查询，也就是说，通过覆盖索引，只需要扫描一次 B+ 树即可获得所需的行记录。")]),s._v(" "),t("h3",{attrs:{id:"如何实现覆盖索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何实现覆盖索引"}},[s._v("#")]),s._v(" 如何实现覆盖索引")]),s._v(" "),t("p",[s._v("上文解释过，下面这个 SQL 语句需要查询两次 B+ 树：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("我们将其稍作修改，使其只需要查询一次 B+ 树：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("之前我们的返回结果是整个行记录，现在我们的返回结果只需要 id")]),s._v(" "),t("p",[s._v("id 是什么？主键索引（聚集索引），age 是什么？普通索引（辅助索引），age 索引的 B+ 树的叶子节点存储的是什么？辅助索引键 + 对应的聚集索引键")]),s._v(" "),t("p",[s._v("所以这条 SQL 语句只需要扫描一次 age 索引的 B+ 树就可以直接提供查询结果，不需要回表。也就是说，在这个查询里面，索引 age 已经 "),t("strong",[s._v("覆盖了")]),s._v(" 我们的查询需求，我们称为覆盖索引（所以覆盖索引其实就是一种联合索引）。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210830095824.png",alt:""}})]),s._v(" "),t("p",[s._v("由于覆盖索引可以减少树的搜索次数，显著提升查询性能，所以使用覆盖索引是一个常用的性能优化手段。")]),s._v(" "),t("p",[s._v("再回到这条语句：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("如果想要使用覆盖索引对这条语句进行优化，该如何做？")]),s._v(" "),t("p",[s._v("很简单了，对吧，我们只需要把 "),t("code",[s._v("age,name")]),s._v(" 设置为联合索引就可以了：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_age_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("此时 age 和 name 作为辅助索引键都在同一棵辅助索引的 B+ 树上，所以只需扫描一次这个组合索引的 B+ 树即可获取到 id、age 和 name，这就是实现了索引覆盖。")]),s._v(" "),t("h3",{attrs:{id:"覆盖索引的常见使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引的常见使用场景"}},[s._v("#")]),s._v(" 覆盖索引的常见使用场景")]),s._v(" "),t("p",[s._v("在下面三个场景中，可以使用覆盖索引来进行优化 SQL 语句：")]),s._v(" "),t("p",[s._v("1）"),t("strong",[s._v("列查询回表优化")]),s._v("（如上面讲的例子，将单列索引 age 升级为联合索引（age, name））")]),s._v(" "),t("p",[s._v("2）"),t("strong",[s._v("全表 count 查询")])]),s._v(" "),t("p",[s._v("举个例子，假设 user 表中现在只有一个索引即主键 id：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("可以用 explain 分析下这条语句，如果 Extra 字段为 Using index 时，就表示触发索引覆盖：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210902095054.png",alt:""}})]),s._v(" "),t("p",[s._v("显然现在是没有触发覆盖索引的，我们来优化下：将 age 列设置为索引 "),t("code",[s._v("create index idx_age on user(age)")]),s._v("，这样只需要查一遍 age 索引的 B+ 树即可得到结果：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210902095542.png",alt:""}})]),s._v(" "),t("p",[s._v("3）"),t("strong",[s._v("分页查询")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" username "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("对于这条 SQL，因为 name 字段不是索引，所以在分页查询需要进行回表查询。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210902095728.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("Using filesort")]),s._v(" 表示没有使用索引的排序，或者说表示在索引之外，需要额外进行外部的排序动作。看到这个字段就应该意识到你需要对这条 SQL 进行优化了。")]),s._v(" "),t("p",[s._v("使用索引覆盖优化：将 (age, name) 设置为联合索引，这样只需要查一遍 (age, name) 联合索引的 B+ 树即可得到结果。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cs-wiki.oss-cn-shanghai.aliyuncs.com/img/20210902100000.png",alt:""}})]),s._v(" "),t("blockquote",[t("p",[s._v("我是小牛肉，长风破浪会有时，小伙伴们下篇文章再见 👋")])])])}),[],!1,null,null,null);a.default=r.exports}}]);